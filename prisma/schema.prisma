// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum TipoTarjeta {
  Credito
  Debito
}

model User {
  id         String    @id @default(cuid())
  identifier String    @unique
  password   String
  tarjetas   Tarjeta[]
  createdAt  DateTime  @default(now())
}

model Tarjeta {
  id                 String        @id @default(cuid())
  color              String
  nombre             String
  saldo              Float
  numero             String?
  cvv                String?
  fechaDeCorte       String
  fechaDeVencimiento String?
  tipo               TipoTarjeta
  usuarioId          String
  credito            Credito?
  debito             Debito?
  createdAt          DateTime      @default(now())
  usuario            User?         @relation(fields: [usuarioId], references: [id])
  transacciones      Transaccion[]
}

model Credito {
  limiteDeCredito Float
  tasaDeInteres   Float
  anualidad       Float?
  tarjeta         Tarjeta @relation(fields: [tarjetaId], references: [id], onDelete: Cascade)
  tarjetaId       String  @unique
}

model Debito {
  tarjeta   Tarjeta @relation(fields: [tarjetaId], references: [id], onDelete: Cascade)
  tarjetaId String  @unique
}

model Transaccion {
  id           String      @id @default(cuid())
  fecha        DateTime    @default(now())
  createdAt    DateTime    @default(now())
  monto        Float
  categoria    String
  subcategoria String?
  concepto     String?
  tarjeta      Tarjeta?    @relation(fields: [tarjetaId], references: [id], onDelete: Cascade)
  tarjetaId    String
  fragmentos   Fragmento[]
}

model Fragmento {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  cantidad      Float
  concepto      String
  monto         Float
  transaccion   Transaccion @relation(fields: [transaccionId], references: [id], onDelete: Cascade)
  transaccionId String
}
